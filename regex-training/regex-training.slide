Regular Expressions
The swiss army knife of text processing
18:00 01 Apr 2015

Pieter Droogendijk
Developer, CRI
pieter@binky.org.uk


* Overview & History

* Regular Expressions: what are they?

  ( ( ( [^"/#]+
        ( " ( [^\\"]+ ( [\\] . )? )+ "
        | [/][^/*]
        | [#] ( $ | [^i] | i[^f] | if[^ ] | if[ ][^0] | if[ ]0[^\n] )
        )?
      )+
    )
  )
  ( ^[#]if[ ]0\n
    ( ( $
      | [^#]
      | [#] ( [^e] | e[^n] | en[^d] | end[^i] | endi[^f] | endif[^\n] )
      )
      [^\n]*\n
    )+
    ^[#]endif$\n?
  | /
    ( /.*$
    | [*]
      ( [^*]+ [*] [^/] )+
      [^*]+ [*] [/]
    )
  )?

* Some history

- Stephen Cole Kleene (1957): Mathematical framework, Regular Sets
- SNOBOL4 (1967)
- Ken Thompson (1968): QED
- Bell Labs (1970): ed, sed, awk, vi, emacs
- Henry Spencer (1986): Perl, Tcl, PostgreSQL
- POSIX.2 (1992)
- Philip Hazel (1997): PCRE (PHP, Apache http)
- Russ Cox (2010): RE2 (Google)
- Eclipse, notepad++, IntelliJ, every programming language.
- Many flavours of regex, many implementations.

* Minimal Extended Regex Syntax

* Quick Reference: Features

Atoms

  .             any character at all
  [xyz]         x, y or z
  [^xyz]        any character, but not x, y or z

Qualifiers

  ?             0 or 1
  *             0 or more
  +             1 or more
  {n,m}         between n and m inclusive

Compositors

  xy            standard concatenation
  x|y           x or y

Anchors

  ^             start of string
  $             end of string

* Quick Reference: Precedence

Precedence

  \x            escaped character
  []            bracket expression
  ()            grouping
  * + ? {n,m}   qualifier
                concatenation
  ^ $           anchoring
  |             alternation

Character classes

  [[:ascii:]]   Any ascii character
  [[:alpha:]]   Upper or lowercase alphanumeric characters
  [[:digit:]]   Numeric digit
  [[:xdigit:]]  Hex digit; [[:digit:]] or [a-f] or [A-F]
  [[:alnum:]]   [[:alpha:]] or [[:digit:]]
  [[:word:]]    [[:alnum:]] or _
  [[:cntrl:]]   Control character
  [[:blank:]]   Space or tab
  [[:space:]]   Any whitespace
  [[:graph:]]   All printable characters
  [[:lower:]]   Lowercase alpha
  [[:upper:]]   Uppercase alpha
  



